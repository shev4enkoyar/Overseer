// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Overseer.WebAPI.Infrastructure.Data;

#nullable disable

namespace Overseer.WebAPI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.Container", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("TypedContainerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("VersioningContainers");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContainerId");

                    b.ToTable("VersioningContainerVersions");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersionTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContainerId");

                    b.ToTable("VersioningContainerVersionTags");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersionTagValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("VersioningContainerVersionTagValues");
                });

            modelBuilder.Entity("VersioningContainerVersionVersioningContainerVersionTagValue", b =>
                {
                    b.Property<int>("TagValuesId")
                        .HasColumnType("integer");

                    b.Property<int>("VersionsId")
                        .HasColumnType("integer");

                    b.HasKey("TagValuesId", "VersionsId");

                    b.HasIndex("VersionsId");

                    b.ToTable("VersioningContainerVersionVersioningContainerVersionTagValue");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.Container", b =>
                {
                    b.HasOne("Overseer.WebAPI.Domain.Entities.Project", "Project")
                        .WithMany("Containers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersion", b =>
                {
                    b.HasOne("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainer", "Container")
                        .WithMany("Versions")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersionTag", b =>
                {
                    b.HasOne("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainer", "Container")
                        .WithMany("VersionTags")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersionTagValue", b =>
                {
                    b.HasOne("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersionTag", "Tag")
                        .WithMany("Values")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("VersioningContainerVersionVersioningContainerVersionTagValue", b =>
                {
                    b.HasOne("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersionTagValue", null)
                        .WithMany()
                        .HasForeignKey("TagValuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersion", null)
                        .WithMany()
                        .HasForeignKey("VersionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VersioningContainerVersionVersioningContainerVersionTagVal~1");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.Project", b =>
                {
                    b.Navigation("Containers");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainer", b =>
                {
                    b.Navigation("VersionTags");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("Overseer.WebAPI.Domain.Entities.VersioningContainers.VersioningContainerVersionTag", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
